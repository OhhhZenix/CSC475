start App(mealLogDao, exerciseLogDao, foodCatalogDao, exerciseCatalogDao)
    Declarations
        navController = initialize navigation controller
        selectedMealLog = initialize mutable state with value 0
        selectedExerciseLog = initialize mutable state with value 0
        selectedFoodCatalog = initialize mutable state with value 0
        selectedExerciseCatalog = initialize mutable state with value 0

    start NavHost
        set navigation controller to navController
        set start destination to "Home"

        // Home Screen
        if current destination is "Home" then
            HomeScreen(navController)
        endIf

        // Calculate Goal Screen
        if current destination is "CalculateGoal" then
            CalculateGoalScreen(navController)
        endIf

        // Meal Log Screens
        if current destination is "MealLog" then
            MealLogScreen(navController, mealLogDao, foodCatalogDao, selectedMealLog)
        endIf

        if current destination is "AddMealLog" then
            AddMealLogScreen(navController, mealLogDao, foodCatalogDao)
        endIf

        if current destination is "EditMealLog" then
            EditMealLogScreen(navController, mealLogDao, foodCatalogDao, selectedMealLog)
        endIf

        // Exercise Log Screens
        if current destination is "ExerciseLog" then
            ExerciseLogScreen(navController, exerciseLogDao, exerciseCatalogDao, selectedExerciseLog)
        endIf

        if current destination is "AddExerciseLog" then
            AddExerciseLogScreen(navController, exerciseLogDao, exerciseCatalogDao)
        endIf

        if current destination is "EditExerciseLog" then
            EditExerciseLogScreen(navController, exerciseLogDao, exerciseCatalogDao, selectedExerciseLog)
        endIf

        // Food Catalog Screens
        if current destination is "FoodCatalog" then
            FoodCatalogScreen(navController, foodCatalogDao, selectedFoodCatalog)
        endIf

        if current destination is "AddFood" then
            AddFoodCatalogScreen(navController, foodCatalogDao)
        endIf

        if current destination is "EditFood" then
            EditFoodCatalogScreen(navController, foodCatalogDao, selectedFoodCatalog)
        endIf

        // Exercise Catalog Screens
        if current destination is "ExerciseCatalog" then
            ExerciseCatalogScreen(navController, exerciseCatalogDao, selectedExerciseCatalog)
        endIf

        if current destination is "AddExercise" then
            AddExerciseCatalogScreen(navController, exerciseCatalogDao)
        endIf

        if current destination is "EditExercise" then
            EditExerciseCatalogScreen(navController, exerciseCatalogDao, selectedExerciseCatalog)
        endIf
    end NavHost
end App

start HomeScreen(navController)
    start Scaffold
        set top bar with title "Fitness Tracker"

        start Column
            set fill max size
            set padding to innerPadding

            addSpacer(8)

            start Text
                set content to "Options"
                set padding to 8 (start)
                set font size to 32
            end Text

            addSpacer(2)

            start Text
                set content to "Get your fitness journey started!"
                set padding to 8 (start)
                set font style to italic
            end Text

            addSpacer(4)

            start Button
                set on click to navigate to "CalculateGoal"
                set fill max width
                set padding to 8 (start, end)

                start Text
                    set content to "Calculate Goals"
                end Text
            end Button

            start Button
                set on click to navigate to "MealLog"
                set fill max width
                set padding to 8 (start, end)

                start Text
                    set content to "Meal Log"
                end Text
            end Button

            start Button
                set on click to navigate to "ExerciseLog"
                set fill max width
                set padding to 8 (start, end)

                start Text
                    set content to "Exercise Log"
                end Text
            end Button

            start Button
                set on click to navigate to "FoodCatalog"
                set fill max width
                set padding to 8 (start, end)

                start Text
                    set content to "Food Catalog"
                end Text
            end Button

            start Button
                set on click to navigate to "ExerciseCatalog"
                set fill max width
                set padding to 8 (start, end)

                start Text
                    set content to "Exercise Catalog"
                end Text
            end Button
        end Column
    end Scaffold
end HomeScreen

start CalculateGoalScreen(navController)
    Declarations
        context = get current context
        age = initialize mutable state with empty string
        height = initialize mutable state with empty string
        weight = initialize mutable state with empty string
        sexOptions = initialize mutable list with ["Male", "Female"]
        selectedSex = initialize mutable state with empty string
        isExpanded = initialize mutable state with false
        calculated = initialize mutable state with false
        bmr = initialize mutable state with 0.0
        decimalFormatter = initialize decimal formatter with pattern "#,###.#"

    start Scaffold
        set top bar with title "Calculate Goals"

        start Column
            set padding to innerPadding

            if calculated is true then
                start Column
                    set padding to 8 (start, end), 4 (top, bottom)

                    start Text
                        set content to "Given the following details:"
                    end Text

                    start Text
                        set content to "- Sex: [selectedSex]"
                    end Text

                    start Text
                        set content to "- Age: [formatted age] years old"
                    end Text

                    start Text
                        set content to "- Height: [formatted height] cm"
                    end Text

                    start Text
                        set content to "- Weight: [formatted weight] kg"
                    end Text

                    start Text
                        set content to "Here are the options:"
                    end Text

                    start Text
                        set content to "- Maintain Weight: [formatted bmr] Calories"
                    end Text

                    start Text
                        set content to "- Gain Weight: [formatted bmr + 500] Calories"
                    end Text

                    start Text
                        set content to "- Lose Weight: [formatted bmr - 500] Calories"
                    end Text
                end Column

                start Button
                    set on click to set calculated to false
                    set fill max width
                    set padding to 8 (start, end)

                    start Text
                        set content to "Recalculate"
                    end Text
                end Button

                start Button
                    set on click to navigate to "Home"
                    set fill max width
                    set padding to 8 (start, end)

                    start Text
                        set content to "Back to Home"
                    end Text
                end Button
            else
                addSpacer(4)

                start ExposedDropdownMenuBox
                    set expanded to isExpanded
                    set on expanded change to toggle isExpanded
                    set fill max width
                    set padding to 8 (start, end)

                    start OutlinedTextField
                        set value to selectedSex
                        set on value change to do nothing
                        set label to "Sex"
                        set read only to true
                        set trailing icon to dropdown icon
                        set fill max width
                        set menu anchor type to primary editable
                    end OutlinedTextField

                    start ExposedDropdownMenu
                        set expanded to isExpanded
                        set on dismiss request to set isExpanded to false

                        for each option in sexOptions
                            start DropdownMenuItem
                                set text to option
                                set on click to
                                    set selectedSex to option
                                    set isExpanded to false
                            end DropdownMenuItem
                        endFor
                    end ExposedDropdownMenu
                end ExposedDropdownMenuBox

                start OutlinedTextField
                    set value to age
                    set on value change to
                        if input is a valid double then
                            set age to input
                    set label to "Age (years)"
                    set fill max width
                    set padding to 8 (start, end)
                    set keyboard type to number
                end OutlinedTextField

                start OutlinedTextField
                    set value to height
                    set on value change to
                        if input is a valid double then
                            set height to input
                    set label to "Height (cm)"
                    set fill max width
                    set padding to 8 (start, end)
                    set keyboard type to number
                end OutlinedTextField

                start OutlinedTextField
                    set value to weight
                    set on value change to
                        if input is a valid double then
                            set weight to input
                    set label to "Weight (kg)"
                    set fill max width
                    set padding to 8 (start, end)
                    set keyboard type to number
                end OutlinedTextField

                addSpacer(4)

                start Button
                    set on click to
                        if selectedSex is empty then
                            show toast "A sex has not been selected. Try again."
                        else if age is empty then
                            show toast "Age is empty. Try again."
                        else if age is less than or equal to 0 then
                            show toast "Age must be greater than zero. Try again."
                        else if height is empty then
                            show toast "Height is empty. Try again."
                        else if height is less than or equal to 0 then
                            show toast "Height must be greater than zero. Try again."
                        else if weight is empty then
                            show toast "Weight is empty. Try again."
                        else if weight is less than or equal to 0 then
                            show toast "Weight must be greater than zero. Try again."
                        else
                            if selectedSex is "Male" then
                                set bmr to calculateMaleBMR(weight, height, age)
                            else if selectedSex is "Female" then
                                set bmr to calculateFemaleBMR(weight, height, age)
                            set calculated to true
                    set fill max width
                    set padding to 8 (start, end)

                    start Text
                        set content to "Calculate"
                    end Text
                end Button

                start Button
                    set on click to navigate to "Home"
                    set fill max width
                    set padding to 8 (start, end)

                    start Text
                        set content to "Back"
                    end Text
                end Button
            endIf
        end Column
    end Scaffold
end CalculateGoalScreen

start MealLogScreen(navController, mealLogDao, foodCatalogDao, selectedMealLog)
    Declarations
        coroutineScope = initialize coroutine scope
        meals = initialize mutable state list of pairs (MealLog, FoodCatalog?)
        totalCalories = initialize mutable state with 0.0
        decimalFormatter = initialize decimal formatter with pattern "#,###.#"

    start LaunchedEffect
        launch coroutine
            for each log in mealLogDao.getTodayLogs()
                food = foodCatalogDao.getFood(log.foodId)
                add (log, food) to meals
                add (food.calories * log.quantity) to totalCalories
            endFor
        endLaunch
    end LaunchedEffect

    start Scaffold
        set top bar with title "Meal Log"

        start Column
            set padding to innerPadding

            start Button
                set on click to navigate to "Home"
                set padding to 8

                start Text
                    set content to "Back"
                end Text
            end Button

            start Text
                set content to "Today's Intake"
                set fill max width
                set text align to center
                set font size to 32
            end Text

            start Text
                set content to "Total Calories: [formatted totalCalories]"
                set fill max width
                set text align to center
                set font style to italic
            end Text

            start Button
                set on click to navigate to "AddMealLog"
                set fill max width
                set padding to 8

                start Text
                    set content to "Add meal"
                end Text
            end Button

            if meals is empty then
                start Box
                    set fill max size
                    set content alignment to center

                    start Column
                        set horizontal alignment to center
                        set vertical arrangement to center

                        start Text
                            set content to "No logs available from today."
                            set text align to center
                        end Text

                        start Text
                            set content to "Get started by adding one."
                            set text align to center
                        end Text
                    end Column
                end Box
            else
                start Text
                    set content to "Meals from Today:"
                    set padding to 8 (start)
                end Text

                start LazyColumn
                    for each meal in meals (sorted by dateTime, reversed)
                        if meal.second is not null then
                            start Button
                                set on click to
                                    set selectedMealLog to meal.first.id
                                    navigate to "EditMealLog"
                                set fill max width
                                set padding to 8 (start, end, bottom)
                                set shape to rounded corners (8)

                                start Row
                                    set horizontal arrangement to space between
                                    set vertical alignment to center

                                    start Column
                                        start Text
                                            set content to meal.second.name
                                            set font weight to bold
                                            set font size to 16
                                        end Text

                                        start Text
                                            set content to "Quantity: [formatted meal.first.quantity]"
                                            set font weight to light
                                        end Text

                                        start Text
                                            set content to "Total Calories: [formatted meal.second.calories * meal.first.quantity]"
                                            set font weight to light
                                        end Text
                                    end Column

                                    start Text
                                        set content to formatted meal.first.dateTime (pattern: "MMM dd yyyy hh:mm a")
                                        set text align to end
                                        set fill max width
                                    end Text
                                end Row
                            end Button
                        endIf
                    endFor
                end LazyColumn
            endIf
        end Column
    end Scaffold
end MealLogScreen

start AddMealLogScreen(navController, mealLogDao, foodCatalogDao)
    Declarations
        context = get current context
        coroutineScope = initialize coroutine scope
        isExpanded = initialize mutable state with false
        food = initialize mutable state list of pairs (String, Int)
        selectedFoodName = initialize mutable state with empty string
        selectedFoodId = initialize mutable state with 0
        quantity = initialize mutable state with empty string
        pickedDate = initialize mutable state with current date
        pickedTime = initialize mutable state with current time
        formattedDate = derive formatted date from pickedDate (pattern: "MMM dd yyyy")
        formattedTime = derive formatted time from pickedTime (pattern: "hh:mm a")
        datePickerState = initialize date picker state
        timePickerState = initialize time picker state
        showDateDialog = initialize mutable state with false
        showTimeDialog = initialize mutable state with false

    start LaunchedEffect
        for each food in foodCatalogDao.getAllFood()
            add (food.name, food.id) to food
        endFor
    end LaunchedEffect

    start Scaffold
        set top bar with title "New Meal Log"

        start Column
            set padding to innerPadding

            addSpacer(4)

            start ExposedDropdownMenuBox
                set expanded to isExpanded
                set on expanded change to toggle isExpanded
                set fill max width
                set padding to 8 (start, end)

                start OutlinedTextField
                    set value to selectedFoodName
                    set on value change to do nothing
                    set label to "Food"
                    set read only to true
                    set trailing icon to dropdown icon
                    set fill max width
                    set menu anchor type to primary editable
                end OutlinedTextField

                start ExposedDropdownMenu
                    set expanded to isExpanded
                    set on dismiss request to set isExpanded to false

                    for each item in food
                        start DropdownMenuItem
                            set text to item.first
                            set on click to
                                set selectedFoodName to item.first
                                set selectedFoodId to item.second
                                set isExpanded to false
                        end DropdownMenuItem
                    endFor
                end ExposedDropdownMenu
            end ExposedDropdownMenuBox

            start OutlinedTextField
                set value to quantity
                set on value change to
                    if input is a valid double then
                        set quantity to input
                set label to "Quantity"
                set fill max width
                set padding to 8 (start, end)
                set keyboard type to number
            end OutlinedTextField

            start OutlinedTextField
                set value to formattedDate
                set on value change to do nothing
                set label to "Date"
                set read only to true
                set trailing icon to date picker icon
                set on icon click to set showDateDialog to true
                set fill max width
                set padding to 8 (start, end)
            end OutlinedTextField

            if showDateDialog is true then
                start DatePickerDialog
                    set on dismiss request to set showDateDialog to false
                    set dismiss button to "Cancel"
                    set confirm button to "OK"
                    set on confirm to
                        set pickedDate to selected date from datePickerState
                        set showDateDialog to false
                    set content to DatePicker with datePickerState
                end DatePickerDialog
            endIf

            start OutlinedTextField
                set value to formattedTime
                set on value change to do nothing
                set label to "Time"
                set read only to true
                set trailing icon to time picker icon
                set on icon click to set showTimeDialog to true
                set fill max width
                set padding to 8 (start, end)
            end OutlinedTextField

            if showTimeDialog is true then
                start AlertDialog
                    set on dismiss request to set showTimeDialog to false
                    set dismiss button to "Cancel"
                    set confirm button to "OK"
                    set on confirm to
                        set pickedTime to selected time from timePickerState
                        set showTimeDialog to false
                    set content to TimePicker with timePickerState
                end AlertDialog
            endIf

            addSpacer(4)

            start Button
                set on click to
                    if selectedFoodName is empty then
                        show toast "A food is not selected. Try again."
                    else if quantity is empty then
                        show toast "Quantity is empty. Try again."
                    else if quantity is less than or equal to 0 then
                        show toast "Quantity is less than or equal to zero. Try again."
                    else
                        launch coroutine
                            add new MealLog to mealLogDao with
                                dateTime = pickedDate at pickedTime
                                foodId = selectedFoodId
                                quantity = quantity
                        navigate to "MealLog"
                set fill max width
                set padding to 8 (start, end)

                start Text
                    set content to "Add"
                end Text
            end Button

            start Button
                set on click to navigate to "MealLog"
                set fill max width
                set padding to 8 (start, end)

                start Text
                    set content to "Back"
                end Text
            end Button
        end Column
    end Scaffold
end AddMealLogScreen

start EditMealLogScreen(navController, mealLogDao, foodCatalogDao, selectedMealLog)
    Declarations
        context = get current context
        coroutineScope = initialize coroutine scope
        isExpanded = initialize mutable state with false
        food = initialize mutable state list of pairs (String, Int)
        selectedFoodName = initialize mutable state with empty string
        selectedFoodId = initialize mutable state with 0
        quantity = initialize mutable state with empty string
        pickedDate = initialize mutable state with current date
        pickedTime = initialize mutable state with current time
        formattedDate = derive formatted date from pickedDate (pattern: "MMM dd yyyy")
        formattedTime = derive formatted time from pickedTime (pattern: "hh:mm a")
        datePickerState = initialize date picker state
        timePickerState = initialize time picker state
        showDateDialog = initialize mutable state with false
        showTimeDialog = initialize mutable state with false

    start LaunchedEffect
        for each food in foodCatalogDao.getAllFood()
            add (food.name, food.id) to food
        endFor

        get meal log with selectedMealLog.intValue
            set pickedDate to log.dateTime (date part)
            set pickedTime to log.dateTime (time part)
            set quantity to log.quantity (as string)
            set selectedFoodId to log.foodId
            set selectedFoodName to food name from foodCatalogDao using selectedFoodId
        endGet
    end LaunchedEffect

    start Scaffold
        set top bar with title "Edit Meal Log"

        start Column
            set padding to innerPadding

            addSpacer(4)

            start Text
                set content to "(Selected Meal Log ID: [selectedMealLog.intValue])"
                set fill max width
                set font size to 12
                set text align to center
            end Text

            start ExposedDropdownMenuBox
                set expanded to isExpanded
                set on expanded change to toggle isExpanded
                set fill max width
                set padding to 8 (start, end)

                start OutlinedTextField
                    set value to selectedFoodName
                    set on value change to do nothing
                    set label to "Food"
                    set read only to true
                    set trailing icon to dropdown icon
                    set fill max width
                    set menu anchor type to primary editable
                end OutlinedTextField

                start ExposedDropdownMenu
                    set expanded to isExpanded
                    set on dismiss request to set isExpanded to false

                    for each item in food
                        start DropdownMenuItem
                            set text to item.first
                            set on click to
                                set selectedFoodName to item.first
                                set selectedFoodId to item.second
                                set isExpanded to false
                        end DropdownMenuItem
                    endFor
                end ExposedDropdownMenu
            end ExposedDropdownMenuBox

            start OutlinedTextField
                set value to quantity
                set on value change to
                    if input is a valid double then
                        set quantity to input
                set label to "Quantity"
                set fill max width
                set padding to 8 (start, end)
                set keyboard type to number
            end OutlinedTextField

            start OutlinedTextField
                set value to formattedDate
                set on value change to do nothing
                set label to "Date"
                set read only to true
                set trailing icon to date picker icon
                set on icon click to set showDateDialog to true
                set fill max width
                set padding to 8 (start, end)
            end OutlinedTextField

            if showDateDialog is true then
                start DatePickerDialog
                    set on dismiss request to set showDateDialog to false
                    set dismiss button to "Cancel"
                    set confirm button to "OK"
                    set on confirm to
                        set pickedDate to selected date from datePickerState
                        set showDateDialog to false
                    set content to DatePicker with datePickerState
                end DatePickerDialog
            endIf

            start OutlinedTextField
                set value to formattedTime
                set on value change to do nothing
                set label to "Time"
                set read only to true
                set trailing icon to time picker icon
                set on icon click to set showTimeDialog to true
                set fill max width
                set padding to 8 (start, end)
            end OutlinedTextField

            if showTimeDialog is true then
                start AlertDialog
                    set on dismiss request to set showTimeDialog to false
                    set dismiss button to "Cancel"
                    set confirm button to "OK"
                    set on confirm to
                        set pickedTime to selected time from timePickerState
                        set showTimeDialog to false
                    set content to TimePicker with timePickerState
                end AlertDialog
            endIf

            addSpacer(4)

            start Button
                set on click to
                    if selectedFoodName is empty then
                        show toast "A food is not selected. Try again."
                    else if quantity is empty then
                        show toast "Quantity is empty. Try again."
                    else if quantity is less than or equal to 0 then
                        show toast "Quantity is less than or equal to zero. Try again."
                    else
                        launch coroutine
                            update meal log in mealLogDao with
                                id = selectedMealLog.intValue
                                dateTime = pickedDate at pickedTime
                                foodId = selectedFoodId
                                quantity = quantity
                        navigate to "MealLog"
                set fill max width
                set padding to 8 (start, end)

                start Text
                    set content to "Save"
                end Text
            end Button

            start Button
                set on click to
                    launch coroutine
                        remove meal log with selectedMealLog.intValue from mealLogDao
                    navigate to "MealLog"
                set fill max width
                set padding to 8 (start, end)

                start Text
                    set content to "Delete"
                end Text
            end Button

            start Button
                set on click to navigate to "MealLog"
                set fill max width
                set padding to 8 (start, end)

                start Text
                    set content to "Back"
                end Text
            end Button
        end Column
    end Scaffold
end EditMealLogScreen

start ExerciseLogScreen(navController, exerciseLogDao, exerciseCatalogDao, selectedExerciseLog)
    Declarations
        coroutineScope = initialize coroutine scope
        exercises = initialize mutable state list of pairs (ExerciseLog, ExerciseCatalog?)
        totalCalories = initialize mutable state with 0.0
        decimalFormatter = initialize decimal formatter with pattern "#,###.#"

    start LaunchedEffect
        launch coroutine
            for each log in exerciseLogDao.getTodayLogs()
                exercise = exerciseCatalogDao.getExercise(log.exerciseId)
                add (log, exercise) to exercises
                add (exercise.calories * log.quantity) to totalCalories
            endFor
        endLaunch
    end LaunchedEffect

    start Scaffold
        set top bar with title "Exercise Log"

        start Column
            set padding to innerPadding

            start Button
                set on click to navigate to "Home"
                set padding to 8

                start Text
                    set content to "Back"
                end Text
            end Button

            start Text
                set content to "Today's Expenditure"
                set fill max width
                set text align to center
                set font size to 32
            end Text

            start Text
                set content to "Total Calories: [formatted totalCalories]"
                set fill max width
                set text align to center
                set font style to italic
            end Text

            start Button
                set on click to navigate to "AddExerciseLog"
                set fill max width
                set padding to 8

                start Text
                    set content to "Add exercise"
                end Text
            end Button

            if exercises is empty then
                start Box
                    set fill max size
                    set content alignment to center

                    start Column
                        set horizontal alignment to center
                        set vertical arrangement to center

                        start Text
                            set content to "No logs available from today."
                            set text align to center
                        end Text

                        start Text
                            set content to "Get started by adding one."
                            set text align to center
                        end Text
                    end Column
                end Box
            else
                start Text
                    set content to "Exercises from Today:"
                    set padding to 8 (start)
                end Text

                start LazyColumn
                    for each exercise in exercises (sorted by dateTime, reversed)
                        if exercise.second is not null then
                            start Button
                                set on click to
                                    set selectedExerciseLog to exercise.first.id
                                    navigate to "EditExerciseLog"
                                set fill max width
                                set padding to 8 (start, end, bottom)
                                set shape to rounded corners (8)

                                start Row
                                    set horizontal arrangement to space between
                                    set vertical alignment to center

                                    start Column
                                        start Text
                                            set content to exercise.second.name
                                            set font weight to bold
                                            set font size to 16
                                        end Text

                                        start Text
                                            set content to "Quantity: [formatted exercise.first.quantity]"
                                            set font weight to light
                                        end Text

                                        start Text
                                            set content to "Total Calories: [formatted exercise.second.calories * exercise.first.quantity]"
                                            set font weight to light
                                        end Text
                                    end Column

                                    start Text
                                        set content to formatted exercise.first.dateTime (pattern: "MMM dd yyyy hh:mm a")
                                        set text align to end
                                        set fill max width
                                    end Text
                                end Row
                            end Button
                        endIf
                    endFor
                end LazyColumn
            endIf
        end Column
    end Scaffold
end ExerciseLogScreen

start AddExerciseLogScreen(navController, exerciseLogDao, exerciseCatalogDao)
    Declarations
        context = get current context
        coroutineScope = initialize coroutine scope
        isExpanded = initialize mutable state with false
        exercises = initialize mutable state list of pairs (String, Int)
        selectedExerciseName = initialize mutable state with empty string
        selectedExerciseId = initialize mutable state with 0
        quantity = initialize mutable state with empty string
        pickedDate = initialize mutable state with current date
        pickedTime = initialize mutable state with current time
        formattedDate = derive formatted date from pickedDate (pattern: "MMM dd yyyy")
        formattedTime = derive formatted time from pickedTime (pattern: "hh:mm a")
        datePickerState = initialize date picker state
        timePickerState = initialize time picker state
        showDateDialog = initialize mutable state with false
        showTimeDialog = initialize mutable state with false

    start LaunchedEffect
        for each exercise in exerciseCatalogDao.getAllExercise()
            add (exercise.name, exercise.id) to exercises
        endFor
    end LaunchedEffect

    start Scaffold
        set top bar with title "New Exercise Log"

        start Column
            set padding to innerPadding

            addSpacer(4)

            start ExposedDropdownMenuBox
                set expanded to isExpanded
                set on expanded change to toggle isExpanded
                set fill max width
                set padding to 8 (start, end)

                start OutlinedTextField
                    set value to selectedExerciseName
                    set on value change to do nothing
                    set label to "Exercise"
                    set read only to true
                    set trailing icon to dropdown icon
                    set fill max width
                    set menu anchor type to primary editable
                end OutlinedTextField

                start ExposedDropdownMenu
                    set expanded to isExpanded
                    set on dismiss request to set isExpanded to false

                    for each item in exercises
                        start DropdownMenuItem
                            set text to item.first
                            set on click to
                                set selectedExerciseName to item.first
                                set selectedExerciseId to item.second
                                set isExpanded to false
                        end DropdownMenuItem
                    endFor
                end ExposedDropdownMenu
            end ExposedDropdownMenuBox

            start OutlinedTextField
                set value to quantity
                set on value change to
                    if input is a valid double then
                        set quantity to input
                set label to "Quantity"
                set fill max width
                set padding to 8 (start, end)
                set keyboard type to number
            end OutlinedTextField

            start OutlinedTextField
                set value to formattedDate
                set on value change to do nothing
                set label to "Date"
                set read only to true
                set trailing icon to date picker icon
                set on icon click to set showDateDialog to true
                set fill max width
                set padding to 8 (start, end)
            end OutlinedTextField

            if showDateDialog is true then
                start DatePickerDialog
                    set on dismiss request to set showDateDialog to false
                    set dismiss button to "Cancel"
                    set confirm button to "OK"
                    set on confirm to
                        set pickedDate to selected date from datePickerState
                        set showDateDialog to false
                    set content to DatePicker with datePickerState
                end DatePickerDialog
            endIf

            start OutlinedTextField
                set value to formattedTime
                set on value change to do nothing
                set label to "Time"
                set read only to true
                set trailing icon to time picker icon
                set on icon click to set showTimeDialog to true
                set fill max width
                set padding to 8 (start, end)
            end OutlinedTextField

            if showTimeDialog is true then
                start AlertDialog
                    set on dismiss request to set showTimeDialog to false
                    set dismiss button to "Cancel"
                    set confirm button to "OK"
                    set on confirm to
                        set pickedTime to selected time from timePickerState
                        set showTimeDialog to false
                    set content to TimePicker with timePickerState
                end AlertDialog
            endIf

            addSpacer(4)

            start Button
                set on click to
                    if selectedExerciseName is empty then
                        show toast "An exercise is not selected. Try again."
                    else if quantity is empty then
                        show toast "Quantity is empty. Try again."
                    else if quantity is less than or equal to 0 then
                        show toast "Quantity is less than or equal to zero. Try again."
                    else
                        launch coroutine
                            add new ExerciseLog to exerciseLogDao with
                                dateTime = pickedDate at pickedTime
                                exerciseId = selectedExerciseId
                                quantity = quantity
                        navigate to "ExerciseLog"
                set fill max width
                set padding to 8 (start, end)

                start Text
                    set content to "Add"
                end Text
            end Button

            start Button
                set on click to navigate to "ExerciseLog"
                set fill max width
                set padding to 8 (start, end)

                start Text
                    set content to "Back"
                end Text
            end Button
        end Column
    end Scaffold
end AddExerciseLogScreen

start EditExerciseLogScreen(navController, exerciseLogDao, exerciseCatalogDao, selectedExerciseLog)
    Declarations
        context = get current context
        coroutineScope = initialize coroutine scope
        isExpanded = initialize mutable state with false
        exercises = initialize mutable state list of pairs (String, Int)
        selectedExerciseName = initialize mutable state with empty string
        selectedExerciseId = initialize mutable state with 0
        quantity = initialize mutable state with empty string
        pickedDate = initialize mutable state with current date
        pickedTime = initialize mutable state with current time
        formattedDate = derive formatted date from pickedDate (pattern: "MMM dd yyyy")
        formattedTime = derive formatted time from pickedTime (pattern: "hh:mm a")
        datePickerState = initialize date picker state
        timePickerState = initialize time picker state
        showDateDialog = initialize mutable state with false
        showTimeDialog = initialize mutable state with false

    start LaunchedEffect
        for each exercise in exerciseCatalogDao.getAllExercise()
            add (exercise.name, exercise.id) to exercises
        endFor

        get exercise log with selectedExerciseLog.intValue
            set pickedDate to log.dateTime (date part)
            set pickedTime to log.dateTime (time part)
            set quantity to log.quantity (as string)
            set selectedExerciseId to log.exerciseId
            set selectedExerciseName to exercise name from exerciseCatalogDao using selectedExerciseId
        endGet
    end LaunchedEffect

    start Scaffold
        set top bar with title "Edit Exercise Log"

        start Column
            set padding to innerPadding

            addSpacer(4)

            start Text
                set content to "(Selected Exercise Log ID: [selectedExerciseLog.intValue])"
                set fill max width
                set font size to 12
                set text align to center
            end Text

            start ExposedDropdownMenuBox
                set expanded to isExpanded
                set on expanded change to toggle isExpanded
                set fill max width
                set padding to 8 (start, end)

                start OutlinedTextField
                    set value to selectedExerciseName
                    set on value change to do nothing
                    set label to "Exercise"
                    set read only to true
                    set trailing icon to dropdown icon
                    set fill max width
                    set menu anchor type to primary editable
                end OutlinedTextField

                start ExposedDropdownMenu
                    set expanded to isExpanded
                    set on dismiss request to set isExpanded to false

                    for each item in exercises
                        start DropdownMenuItem
                            set text to item.first
                            set on click to
                                set selectedExerciseName to item.first
                                set selectedExerciseId to item.second
                                set isExpanded to false
                        end DropdownMenuItem
                    endFor
                end ExposedDropdownMenu
            end ExposedDropdownMenuBox

            start OutlinedTextField
                set value to quantity
                set on value change to
                    if input is a valid double then
                        set quantity to input
                set label to "Quantity"
                set fill max width
                set padding to 8 (start, end)
                set keyboard type to number
            end OutlinedTextField

            start OutlinedTextField
                set value to formattedDate
                set on value change to do nothing
                set label to "Date"
                set read only to true
                set trailing icon to date picker icon
                set on icon click to set showDateDialog to true
                set fill max width
                set padding to 8 (start, end)
            end OutlinedTextField

            if showDateDialog is true then
                start DatePickerDialog
                    set on dismiss request to set showDateDialog to false
                    set dismiss button to "Cancel"
                    set confirm button to "OK"
                    set on confirm to
                        set pickedDate to selected date from datePickerState
                        set showDateDialog to false
                    set content to DatePicker with datePickerState
                end DatePickerDialog
            endIf

            start OutlinedTextField
                set value to formattedTime
                set on value change to do nothing
                set label to "Time"
                set read only to true
                set trailing icon to time picker icon
                set on icon click to set showTimeDialog to true
                set fill max width
                set padding to 8 (start, end)
            end OutlinedTextField

            if showTimeDialog is true then
                start AlertDialog
                    set on dismiss request to set showTimeDialog to false
                    set dismiss button to "Cancel"
                    set confirm button to "OK"
                    set on confirm to
                        set pickedTime to selected time from timePickerState
                        set showTimeDialog to false
                    set content to TimePicker with timePickerState
                end AlertDialog
            endIf

            addSpacer(4)

            start Button
                set on click to
                    if selectedExerciseName is empty then
                        show toast "An exercise is not selected. Try again."
                    else if quantity is empty then
                        show toast "Quantity is empty. Try again."
                    else if quantity is less than or equal to 0 then
                        show toast "Quantity is less than or equal to zero. Try again."
                    else
                        launch coroutine
                            update exercise log in exerciseLogDao with
                                id = selectedExerciseLog.intValue
                                dateTime = pickedDate at pickedTime
                                exerciseId = selectedExerciseId
                                quantity = quantity
                        navigate to "ExerciseLog"
                set fill max width
                set padding to 8 (start, end)

                start Text
                    set content to "Save"
                end Text
            end Button

            start Button
                set on click to
                    launch coroutine
                        remove exercise log with selectedExerciseLog.intValue from exerciseLogDao
                    navigate to "ExerciseLog"
                set fill max width
                set padding to 8 (start, end)

                start Text
                    set content to "Delete"
                end Text
            end Button

            start Button
                set on click to navigate to "ExerciseLog"
                set fill max width
                set padding to 8 (start, end)

                start Text
                    set content to "Back"
                end Text
            end Button
        end Column
    end Scaffold
end EditExerciseLogScreen

start FoodCatalogScreen(navController, foodCatalogDao, selectedFoodCatalog)
    Declarations
        coroutineScope = initialize coroutine scope
        food = initialize mutable state list of FoodCatalog

    start LaunchedEffect
        launch coroutine
            add all food from foodCatalogDao.getAllFood() to food
        endLaunch
    end LaunchedEffect

    start Scaffold
        set top bar with title "Food Catalog"

        start Column
            set padding to innerPadding

            start Button
                set on click to navigate to "Home"
                set padding to 8

                start Text
                    set content to "Back"
                end Text
            end Button

            start Text
                set content to "Add your favorite food!"
                set fill max width
                set text align to center
            end Text

            start Button
                set on click to navigate to "AddFood"
                set fill max width
                set padding to 8

                start Text
                    set content to "Add Food"
                end Text
            end Button

            if food is empty then
                start Box
                    set fill max size
                    set content alignment to center

                    start Column
                        set horizontal alignment to center
                        set vertical arrangement to center

                        start Text
                            set content to "No food exists currently."
                            set text align to center
                        end Text

                        start Text
                            set content to "Get started by adding one."
                            set text align to center
                        end Text
                    end Column
                end Box
            else
                start Text
                    set content to "Current catalog:"
                    set padding to 8 (start)
                end Text

                addSpacer(4)

                start LazyColumn
                    for each item in food (sorted by name)
                        start Button
                            set on click to
                                set selectedFoodCatalog to item.id
                                navigate to "EditFood"
                            set fill max width
                            set padding to 8 (start, end, bottom)

                            start Column
                                set horizontal alignment to center

                                start Text
                                    set content to item.name
                                    set font size to 16
                                    set text align to center
                                    set font weight to bold
                                end Text

                                start Text
                                    set content to "[item.calories] Calories"
                                    set text align to center
                                    set font weight to light
                                end Text
                            end Column
                        end Button
                    endFor
                end LazyColumn
            endIf
        end Column
    end Scaffold
end FoodCatalogScreen